name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1

      # setup supported languages

      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - uses: actions/setup-ruby@v1
      - uses: actions/setup-go@v1
        with:
          go-version: "1.13.4"
      - uses: actions/setup-java@v1
        with:
          java-version: "8"
      - uses: actions/setup-node@v1
        with:
          node-version: "12.13.1"
      - uses: denolib/setup-deno@v2
        with:
          deno-version: v0.x
      - uses: julia-actions/setup-julia@v1
        with:
          version: 1.2.0
      - uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: 1.4.2
      - name: vlang
        id: cache-vlang
        run: cd /tmp && git clone https://github.com/vlang/v && cd v && make && sudo ./v symlink
      - name: setup zig
        with:
          version: 0.7.0
        id: cache-zig
        uses: goto-bus-stop/setup-zig@v1
      - name: Installing esy
        run: npm install -g esy@0.6.7 --unsafe-perm
      - name: Restore Esy Cache
        id: restore-cache-esy
        uses: actions/cache@v1
        with:
          path: _export
          key: ${{ runner.os }}-esy-0.6.7-${{ hashFiles('esy.lock/index.json') }}
          restore-keys: |
            ${{ runner.os }}-esy-0.6.7-
      - name: Esy install
        run: "esy install"
      - name: Import Esy Cache
        run: |
          esy import-dependencies _export
          rm -rf _export
      - name: Build esy dependencies
        run: "esy build"

      - name: Export esy cache
        run: |
          esy cleanup .
          esy export-dependencies
        if: steps.restore-cache-esy.outputs.cache-hit != 'true'
      # install rust if not cached TODO
      # - uses: actions/cache@v1
      #   name: cache-cargo
      #   id: cache-cargo
      #   with:
      #     path: ~/.cargo/.bin
      #     key: ${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
      # - name: deps-cargo
      #   if: steps.cache-cargo.outputs.cache-hit != 'true'
      #   run: curl https://sh.rustup.rs -sSf -o rustup.sh && sh rustup.sh -y

      # install npm packages if not cached
      - uses: actions/cache@v1
        name: cache-npm
        id: cache-npm
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}
      - name: deps-npm
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm install

      # install python packages if not cached
      - uses: actions/cache@v1
        name: cache-python
        id: cache-python
        with:
          path: ~/.local/lib/python3.8/site-packages
          key: ${{ runner.os }}-${{ hashFiles('requirements.txt') }}
      - name: deps-python
        if: steps.cache-python.outputs.cache-hit != 'true'
        run: sudo apt-get install python3-setuptools && python3 -m pip install --user wheel && python3 -m pip install --user -r requirements.txt

      # build
      - name: build
        run: ./build.sh
